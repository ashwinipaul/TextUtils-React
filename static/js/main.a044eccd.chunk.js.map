{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toogleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","split","reverse","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a044eccd.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\n        </li> */}\n        \n      </ul>\n      <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n      </form>\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n        <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n        <label className=\"form-check-label\"   htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n      </div>\n    </div>\n  </div>\n</nav>\n    )\n}\n\nNavbar.propTypes  = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: \"Title here\",\n    aboutText: \"about text here\"\n  };\n","import React,{useState} from 'react'\n\n\n\nexport default function TextForm(props) {\n\n    const handleClick=()=>{\n        //console.log(\"uppercase was clicked\" + text)\n        let newtext=text.toUpperCase();\n        setText(newtext)\n        props.showAlert(\"converted to Uppercase\",\"success\");\n    }\n    const handleLoClick=()=>{\n        //console.log(\"uppercase was clicked\" + text)\n        let newtext=text.toLowerCase();\n        setText(newtext)\n        props.showAlert(\"converted to lowercase\",\"success\");\n    }\n    const reverseClick=()=>{\n        //console.log(\"uppercase was clicked\" + text)\n        let newtext=text.split(\"\").reverse().join(\"\")\n        setText(newtext)\n        props.showAlert(\"converted to Reversed\",\"success\");\n    }\n    \n    const handleOnChange=(event)=>{\n       // console.log(\"OnClicked\")\n        setText(event.target.value)\n    }\n    const [text, setText] = useState(\"\");\n    return (\n        <>\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}  id=\"MyBox\" rows=\"8\"></textarea>\n            </div>\n            <button className=\"btn btn-primary mx-1\" onClick={handleClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={reverseClick}>Reverse Text</button>\n        </div>\n        <div className=\"container mx -2\" style={{color:props.mode==='dark'?'white':'#042743'}}>\n            <h1>your text summary</h1>\n            <p>{text.split(\" \").length-1} words and {text.length} characters</p>\n            <h2>preview</h2>\n            <p>{text}</p>\n\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize=(word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n    )\n}\n\nexport default Alert\n","//import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n//let name =\"Ashwini\"\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n    }\n    \n\n  const toogleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#042743'\n      showAlert(\"dark mode has been enabled\",\"success\")\n      document.title=\"TextUtils-Dark mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title=\"TextUtils-Light mode\"\n    }\n\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TEXTUTILS\" aboutText=\"About TextUtils\"/> */}\n    {/* <Navbar/> */}\n    {/* <Router> */}\n    <Navbar title=\"TEXTUTILS\" mode={mode}  toogleMode={toogleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n      \n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About/>\n            </Route>\n            <Route exact path=\"/\"> */}\n            <TextForm  showAlert={showAlert} heading =\"Enter your text to analyse\" mode={mode}/>\n            {/* </Route>\n          </Switch> */}\n          </div>\n     {/* </Router>  */}\n    {/* <About/>  */}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}